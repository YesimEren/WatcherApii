
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <!-- Font Awesome CDN bağlantısı -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="~/css/styles.css">
    <title>WATCHER</title>



</head>
<body style="background-color: #ECEFF1;">
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-body">

        <a class="navbar-brand" href="/WatchUI/Index">
            <i class="fas fa-history"></i>

        </a>
        <a class="text-container" href="/WatchUI/Index">
            <span class="ml-2">Watcher</span>

        </a>

        <a class="nav-link" asp-controller="Login" asp-action="Logout" style="display: flex; align-items: center;margin-left: auto;">
            <span style="font-size: 15px; color: #696969; margin-right: 10px;">LogOut</span>
            <i class="fa fa-sign-out-alt" style="font-size: 25px; color: red;"></i>
        </a>
     

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

    </nav>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-2 col-lg-2 d-none d-md-block bg-dark sidebar">
                <div class="sidebar-sticky">
                    <br />
                    <div class="my-5"></div>
                    <ul class="nav flex-column bg-dark navbar">
                        <li class="nav-item">
                            <a class="nav-link icon-container" href="/WatchUI/Index">
                                <i class="fa fa-home fa-lg" style="margin-right: 5px; margin-left: 5px;"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <div class="my-2"></div>
                        <li class="nav-item">
                            <a class="nav-link icon-container" asp-controller="Login" asp-action="AddUsers">
                                <i class="fa fa-user-plus" style="margin-right: 5px; margin-right: 10px;"></i>
                                <span>Users</span>

                            </a>
                        </li>

                        <div class="my-2"></div>
                        <li class="nav-item">
                            <a class="nav-link icon-container" asp-controller="WatchUI" asp-action="AddVirtualMachine">
                                <i class="fa fa-plus-square" style="margin-right: 5px; margin-right: 10px;"></i>
                                <span>Virtual Machine</span>

                            </a>
                        </li>
                        <!-- Add more sidebar items as needed -->
                    </ul>
                </div>
            </nav>

            <!-- Content -->
            <main role="main" class="col-md-10 ml-sm-auto col-lg-10 px-md-4">
                <div class="main-panel">
                    <div class="content-wrapper">
                        <br />
                        <!-- Panel 1 -->
                        <div class="row">
                            <div class="col-4 grid-margin stretch-card">
                                <div class="card" style="background-color: #F8F8FF;border:2px solid #696969; height: 80%;">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-9">
                                                <div class="d-flex align-items-center">
                                                    <h1 class="mb-50" style="color: #424242;"><b>@ViewBag.VirtualMachineCount</b></h1>
                                                </div>
                                                <h6 class="text-muted font-weight-normal" style="color: black" ;>Total Number of Virtual Machine</h6>
                                            </div>
                                            
                                            <div class="col-3 d-flex align-items-center justify-content-end">
                                                <div class="icon-container2 bg-info">
                                                    <span class="fa fa-window-restore text-white" style="position: relative; top:20%; transform: translateY(-5%);"></span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </div>
                                </div>
                            </div>

                            <!-- Panel 2 -->
                            <div class="col-4 grid-margin stretch-card">
                                <div class="card" style="background-color:#F8F8FF;border:2px solid #696969; height: 80%;">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-9">
                                                <div class="d-flex align-items-center align-self-start">

                                                    <h1 class="mb-50" style="color:#424242; margin-left: 0px;"> <b>@ViewBag.AdminCounts </b></h1>


                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="icon-container2 bg-info">
                                                    <span class="fa fa-users text-white" style="margin-right: 50px; margin-left: 3px;"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <h6 class="text-muted font-weight-normal" style="color: black" ;>Total Number of Users</h6>
                                    </div>
                                </div>
                            </div>

                           

                            
                             <select id="virtualMachineSelect" onchange="showVirtualMachineInfo()" class="custom-select" style="width:1010px; margin-left: 16px;">
                                <option value="" disabled selected>Select Virtual Machine Host</option>
                                @foreach (var vm in ViewBag.VirtualMachines)
                                {
                                    <option value="@vm">@vm</option>
                                }
                            </select> 

                        </div>

                        <br />

                        <div class="row">
                            <div class="col-6 grid-margin stretch-card mb-3 " style="height: 100px;">                              
                                <div class="card" style="background-color: #F8F8FF; border: 3px solid #696969; height: 300%;">                                                
                                    <div class="card-body">
                                        <p class="fw-bolder" style="font-size: 18px; font-family:Arial">VIRTUAL MACHINE STATUS</p>
                                        <div style="text-align: right;">
                                            <span class="fa fa-check-square icon-container3"></span>
                                        </div>
                                        <div id="virtualMachineInfo" style="display: none;">
                                            <div id="virtualMachineName"></div>
                                            <div id="statusRectangle" class="circle status" style="margin-top: 10px;"></div>
                                            <button type="button" class="btn btn-outline-dark fw-medium" style="border-width: 2px;" onclick="toggleVirtualMachineStatus()">Change Virtual Machine Status</button>
                                            <div id="statusText" style="font-size: 16px; margin-top: 10px;"></div>
                                            
                                        </div>
                                        
                                    </div>
                                    
                                </div>
                            </div>

                            <div class="col-6 grid-margin stretch-card mb-3 " style="height: 300px;">
                                <div class="card" style="background-color: #F8F8FF; border: 3px solid #696969; height: 213%;">
                                    <div class="card-body">
                                        <div class="row">
                                            <!-- Sol Tarafta Grafik -->
                                            <div class="col-md-6">
                                                <p class="fw-bolder" style="font-family:Arial; font-size:18px; ">MEMORY</p>
                                                <div style="position: relative; left: 190%;">
                                                    <span class="fas fa-server icon-container3"></span>
                                                </div>
                                                <canvas id="memoryPieChart" class="custom-pie-chart"></canvas>
                                            </div>
                                            <!-- Sağ Tarafta Bilgiler -->
                                            <div class="col-md-6 text-end">
                                                <div id="memoryInfo">
                                                    <div id="usedMemory"></div>
                                                    <div id="totalMemory"></div>
                                                    <div id="usagePercentage"></div>
                                                    <div id="memoryStatusCircle"></div>
                                                    <div id="statusBadge"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Loading Spinner -->
                                        <div id="loadingMessage" class="spinner-container" style="text-align: center; margin-top: 20px;">
                                            <div class="spinner" role="status">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="my-4"></div> <!-- Araya boşluk ekleniyor -->

                        <div class="row">
                            <div class="col-6 grid-margin stretch-card mb-3 " style="height: 100px;">
                                <div class="card" style="background-color: #F8F8FF; border: 3px solid #696969; height: 300%;">
                                    
                                    <div class="card-body">
                                        <p class="fw-bolder" style="font-size:18px;">DOCKER STATUS</p>
                                        <div style="text-align: right;">
                                            <span class="fab fa-docker icon-container3"></span>
                                        </div>
                                        <div id="dockerStatusInfo">
                                            <!-- Docker durumu kuruluysa -->
                                            <div id="dockerSuccessAlert" class="alert alert-success mt-3" role="alert" style="display: none;">
                                                <i class="fas fa-check-circle" style="margin-right: 10px;"></i> Docker is installed!
                                            </div>
                                            <!-- Docker durumu kurulu değilse -->
                                            <div id="dockerErrorAlert" class="alert alert-danger mt-3" role="alert" style="display: none;">
                                                <i class="fas fa-times-circle" style="margin-right: 10px;"></i> Docker is not installed!
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>

            </main>

        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>   
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


    @section Scripts {
        <script src="~/js/scripts.js"></script>
    }


    <script>

        document.addEventListener("DOMContentLoaded", function () {
            DockerStatus();
            getMemoryUsage();
                 

            // Sanal makina seçildiğinde bellek verilerini tekrar al
            document.getElementById("virtualMachineSelect").addEventListener("change", function () {
                var loadingContainer = document.getElementById("loadingMessage");
                loadingContainer.innerHTML = '<div class="spinner-container"><div class="spinner"></div> Yükleniyor...</div>';

                // Belirli bir süre gösterdikten sonra verileri al
                setTimeout(function () {
                    getMemoryUsage();
                }, 1000); // 1000 milisaniye (1 saniye) süreyle göster
            });
        });

        function showVirtualMachineInfo() {
            var select = document.getElementById("virtualMachineSelect");
            var selectedVirtualMachine = select.options[select.selectedIndex].value;

            document.getElementById("loadingMessage").innerText = "Veriler alınıyor...";
            document.getElementById("loadingMessage").style.display = "block";

            // AJAX isteği yaparak sanal makina durumunu kontrol et
            fetch(`http://localhost:8081/api/WatcherWebAPI/${selectedVirtualMachine}`, {
                method: 'GET',
                mode: 'cors',
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.text(); // Veriyi text olarak al
                })
                .then(data => {
                    const jsonData = JSON.parse(data);

                    // Sanal makina durumuna göre metni güncelle
                    updateStatusText(jsonData.isRunning);

                    // Geri kalan kodları buraya taşı
                    console.log(jsonData);

                    document.getElementById("virtualMachineInfo").style.display = "block";
                    var statusRectangleElement = document.getElementById("statusRectangle");
                    statusRectangleElement.style.backgroundColor = jsonData.isRunning ? "green" : "red";

                    var virtualMachineNameElement = document.getElementById("virtualMachineName");
                    virtualMachineNameElement.innerText = "Select Virtual Machine: " + selectedVirtualMachine;
                    document.getElementById("loadingMessage").style.display = "none";

                    // Docker durumunu kontrol et
                    DockerStatus();
                })
                .catch(error => {
                    console.error('Hata Detayı:', error.message);
                    console.log('catch bloğu içindeyim'); // Eklenen console.log
                    document.getElementById("loadingMessage").style.display = "none";
                    // Ek hata işlemleri
                });

        }

        

        // Sanal makina durumuna göre metni güncelleyen fonksiyon
        function updateStatusText(isRunning) {
            var statusTextElement = document.getElementById("statusText");

            if (isRunning) {
                statusTextElement.innerHTML = '<div class="alert alert-success" role="alert"><i class="fas fa-check-circle"></i> Virtual Machine is Open</div>';
                statusTextElement.style.color = 'green';
            } else {
                statusTextElement.innerHTML = '<div class="alert alert-danger" role="alert"><i class="fas fa-times-circle"></i> Virtual Machine is Closed</div>';
                statusTextElement.style.color = 'red';
                
            }
        }
        

        // Docker durumunu kontrol et
        function DockerStatus() {
            var select = document.getElementById("virtualMachineSelect");
            var selectedVirtualMachine = select.options[select.selectedIndex].value;

            document.getElementById("loadingMessage").innerText = "Veriler alınıyor...";
            document.getElementById("loadingMessage").style.display = "block";

            // AJAX isteği yaparak Docker durumunu kontrol et
            fetch(`http://localhost:8081/api/WatcherWebAPI/docker/${selectedVirtualMachine}`, {
                method: 'GET',
                mode: 'cors',
               
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(data);

                    // Docker durumuna göre uygun alert mesajını göster
                    var dockerSuccessAlert = document.getElementById("dockerSuccessAlert");
                    var dockerErrorAlert = document.getElementById("dockerErrorAlert");

                    if (data.message && data.message.includes("kurulu")) {
                        dockerSuccessAlert.style.display = "block";
                        dockerErrorAlert.style.display = "none";
                    } else {
                        dockerSuccessAlert.style.display = "none";
                        dockerErrorAlert.style.display = "block";
                    }

                    document.getElementById("loadingMessage").innerText = "";
                    document.getElementById("loadingMessage").style.display = "none";

                    // Docker Durumu bölümünü göster
                    document.getElementById("dockerStatusInfo").style.display = "block";
                })
                .catch(error => {
                    console.error('Hata:', error);
                    document.getElementById("loadingMessage").innerText = "Bir hata oluştu. Docker durumu alınamadı.";
                    document.getElementById("loadingMessage").style.display = "block";

                    // Docker Durumu bölümünü gizle (hata durumunda)
                    document.getElementById("dockerStatusInfo").style.display = "none";
                });
        }

        function getMemoryUsage() {

            var select = document.getElementById("virtualMachineSelect");
            var selectedVirtualMachine = select.options[select.selectedIndex].value;

            document.getElementById("loadingMessage").innerHTML = '<div class="spinner"></div> Yükleniyor...';
            // document.getElementById("loadingMessage").innerText = "Veriler alınıyor...";
            // document.getElementById("loadingMessage").style.display = "block";

            fetch(`http://localhost:8081/api/WatcherWebAPI/memory/${selectedVirtualMachine}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    updateMemoryInfo(data);
                    createMemoryPieChart(data.usedMemory, data.totalMemory - data.usedMemory);
                })
                .catch(error => {
                    console.error('Hata:', error);
                    displayErrorMessage();
                });


        }

        function updateMemoryInfo(data) {
            document.getElementById("usedMemory").innerText = "USED MEMORY: " + data.usedMemory + " MB";
            document.getElementById("totalMemory").innerText = "TOTAL MEMORY: " + data.totalMemory + " MB";
            document.getElementById("usagePercentage").innerText = "USEGA PERCENTAGE: " +
                data.usagePercentage.toFixed(2) + "%";


            var memoryStatusCircleElement = document.getElementById("memoryStatusCircle");
            var statusBadgeElement = document.getElementById("statusBadge");

            if (data.status === "Red") {
                statusBadgeElement.innerHTML = '<span class="badge rounded-pill text-danger">' +
                    'Usage Percentage: ' + data.usagePercentage.toFixed(2) + '%</span>';
            } else {
                statusBadgeElement.innerHTML = '<span class="badge rounded-pill text-success">' +
                    'Usage Percentage: ' + data.usagePercentage.toFixed(2) + '%</span>';
            }

            document.getElementById("loadingMessage").innerText = "";
            document.getElementById("loadingMessage").style.display = "none";
            document.getElementById("memoryInfo").style.display = "block";
        }

        function displayErrorMessage() {
            document.getElementById("loadingMessage").innerText = "Bir hata oluştu. Bellek kullanımı alınamadı.";
            document.getElementById("loadingMessage").style.display = "block";
            document.getElementById("memoryInfo").style.display = "none";
        }

        function createMemoryPieChart(usedMemory, freeMemory) {
            var ctx = document.getElementById("memoryPieChart").getContext("2d");
            var memoryData = {
                labels: ["Used Memory", "Free Memory"],
                datasets: [{
                    data: [usedMemory, freeMemory],
                    backgroundColor: ["#8B0000", "#AED581"],
                    borderColor: ["#FFFAFA", "#FFFAFA"], // Çizgi renkleri
                    borderWidth: 3, // Çizgi kalınlığı
                }],
            };

            new Chart(ctx, {
                type: 'pie',
                data: memoryData,
                options: {
                    maintainAspectRatio: false, // Boyutları korumamak.
                    responsive: true, // Duyarlılık (sayfa boyutu değiştikçe grafik boyutunu ayarlar)
                    legend: {
                        display: true, // Göstergeyi göster/gizle
                        position: 'bottom', // Etiketleri grafik altında göster
                        labels: {
                            fontColor: 'black', // Etiket renkleri
                        },
                    },
                    elements: {
                        arc: {
                            borderColor: '#FFFFFF', // Dilim çizgi rengi
                            borderWidth: 3, // Dilim çizgi kalınlığı
                        },
                    },
                },
            });
        }


    </script>
</body>
</html>

